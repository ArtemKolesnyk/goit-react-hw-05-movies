{"version":3,"file":"static/js/184.c3e55831.chunk.js","mappings":"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","sources":["components/Layout/Layout.styled.js","pages/Movies/Movies.jsx","services/apiTMDB.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 15px;\n`;\n\nexport const Header = styled.header`\n  padding: 15px 30px;\n  display: flex;\n  gap: 20px;\n  box-shadow: 0 0 10px 4px hsl(0deg 0% 38% / 75%); ;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 700;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: green;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 15px;\n  > input {\n    width: 350px;\n    padding: 7px;\n  }\n`;\n\nexport const Box = styled.div`\n  border-bottom: 1px solid #727272;\n  padding: 15px;\n  p {\n    padding-left: 15px;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  text-decoration: none;\n  list-style: none;\n  margin-top: 15px;\n  padding-left: 20px;\n`;\n\nexport const MoreInfoLink = styled(NavLink)`\n  margin: 0;\n  padding: 5px;\n  display: block;\n  color: black;\n  text-decoration: none;\n  list-style: none;\n  &.active {\n    color: green;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const GoBack = styled(Link)`\n  padding: 3px;\n  display: block;\n  width: 100px;\n  text-align: center;\n  svg {\n    width: 20px;\n    height: 15px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  padding: 20px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport {\n  Container,\n  Form,\n  MoviesList,\n} from '../../components/Layout/Layout.styled';\nimport { getSerchMovies } from 'services/apiTMDB';\n\nconst Movies = () => {\n  const [moviesFound, setMoviesFound] = useState([]);\n  const [noResult, setNoResult] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search');\n  const location = useLocation();\n\n  function handlerQuery(e) {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    const searchQuery = form.elements.search.value;\n\n    setSearchParams({ search: searchQuery });\n\n    form.reset();\n  }\n\n  useEffect(() => {\n    setNoResult(false);\n    if (!query) {\n      return;\n    }\n    (async function searchMovies() {\n      const res = await getSerchMovies(query);\n      const movies = res.data.results;\n      if (movies.length === 0) {\n        setNoResult(true);\n        return;\n      }\n      setMoviesFound(movies);\n    })(query);\n    return () => {};\n  }, [query]);\n\n  return (\n    <Container>\n      <Form onSubmit={handlerQuery}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </Form>\n      {query && !noResult && (\n        <MoviesList>\n          {moviesFound.map(({ id, name, title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }} key={id}>\n                {title} {name}\n              </Link>\n            </li>\n          ))}\n        </MoviesList>\n      )}\n      {noResult && <div>Sorry, there are no results for your query!</div>}\n    </Container>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '0fc2f599494f07c2afe7c8f43e6b230d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const res = await axios(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getInfoMovies(movieId) {\n  try {\n    const res = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getSerchMovies(searchQuery) {\n  try {\n    const res = await axios(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: searchQuery,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getCast(movieId) {\n  try {\n    const res = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n"],"names":["Container","styled","Header","NavItem","NavLink","Form","Box","MoreInfoList","MoreInfoLink","GoBack","Link","MoviesList","useState","moviesFound","setMoviesFound","noResult","setNoResult","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getSerchMovies","res","movies","data","results","length","onSubmit","e","preventDefault","form","currentTarget","searchQuery","elements","search","value","reset","name","type","autoComplete","autoFocus","placeholder","map","id","title","to","state","from","API_KEY","getTrendingMovies","axios","params","api_key","console","log","getInfoMovies","movieId","language","include_adult","page","getCast","getReviews","response"],"sourceRoot":""}