{"version":3,"file":"static/js/859.fbc3ad8b.chunk.js","mappings":"2ZAGaA,EAAYC,EAAAA,GAAAA,IAAH,6DAKTC,EAASD,EAAAA,GAAAA,OAAH,qIAONE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sRAgBPI,EAAOJ,EAAAA,GAAAA,KAAH,gHASJK,EAAML,EAAAA,GAAAA,IAAH,oHAQHM,EAAeN,EAAAA,GAAAA,GAAH,mHAOZO,GAAeP,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,+QAgBZQ,GAASR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,uJAWNU,EAAaV,EAAAA,GAAAA,GAAH,yC,gKCjDvB,EA5Ba,WACX,OAAoCW,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OAXAC,EAAAA,EAAAA,YAAU,WAQR,OAPA,mCAAC,uGACmBC,EAAAA,EAAAA,MADnB,OACOC,EADP,QAEOC,EAASD,EAAIE,KAAKC,UAEtBN,EAAcI,GAJjB,2CAAD,uDAOO,WAAQ,CAChB,GAAE,KAGD,UAAC,KAAD,YACE,4CACA,SAAC,KAAD,UACGL,EAAWQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACd,yBACE,UAAC,KAAD,CAAMC,GAAE,iBAAYH,GAApB,UACGE,EADH,IACWD,IADoBD,IADxBA,EADK,QAUvB,C,mMC9BKI,EAAU,mCAGT,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,8GAEeW,EAAAA,EAAAA,GAAM,sBAAuB,CAC7CC,OAAQ,CACNC,QAASH,KAJV,cAEGT,EAFH,yBAOIA,GAPJ,gCASHa,QAAQC,IAAI,QAAZ,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,iGAEeN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,GAAW,CAC1CL,OAAQ,CACNC,QAASH,EACTQ,SAAU,WALX,cAEGjB,EAFH,yBAQIA,GARJ,gCAUHa,QAAQC,IAAI,QAAZ,MAVG,gFAcA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iGAEeT,EAAAA,EAAAA,GAAM,eAAgB,CACtCC,OAAQ,CACNC,QAASH,EACTQ,SAAU,QACVG,MAAOD,EACPE,eAAe,EACfC,KAAM,KARP,cAEGtB,EAFH,yBAWIA,GAXJ,gCAaHa,QAAQC,IAAI,QAAZ,MAbG,gFAiBA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAAuBP,GAAvB,iGAEeN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,YAA6B,CAClDL,OAAQ,CACNC,QAASH,EACTQ,SAAU,WALX,cAEGjB,EAFH,yBASIA,GATJ,gCAWHa,QAAQC,IAAI,QAAZ,MAXG,gFAeA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA0BR,GAA1B,iGAEoBN,EAAAA,EAAAA,GAAM,SAAD,OAAUM,EAAV,YAA6B,CACvDL,OAAQ,CACNC,QAASH,EACTQ,SAAU,QACVK,KAAM,KANP,cAEGG,EAFH,yBASIA,GATJ,gCAWHZ,QAAQC,IAAI,QAAZ,MAXG,gFA7DPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Layout/Layout.styled.js","pages/Home/Home.jsx","services/apiTMDB.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 15px;\n`;\n\nexport const Header = styled.header`\n  padding: 15px 30px;\n  display: flex;\n  gap: 20px;\n  box-shadow: 0 0 10px 4px hsl(0deg 0% 38% / 75%); ;\n`;\n\nexport const NavItem = styled(NavLink)`\n  font-size: 700;\n  display: flex;\n  font-size: 20px;\n  font-weight: 700;\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: green;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 15px;\n  > input {\n    width: 350px;\n    padding: 7px;\n  }\n`;\n\nexport const Box = styled.div`\n  border-bottom: 1px solid #727272;\n  padding: 15px;\n  p {\n    padding-left: 15px;\n  }\n`;\n\nexport const MoreInfoList = styled.ul`\n  text-decoration: none;\n  list-style: none;\n  margin-top: 15px;\n  padding-left: 20px;\n`;\n\nexport const MoreInfoLink = styled(NavLink)`\n  margin: 0;\n  padding: 5px;\n  display: block;\n  color: black;\n  text-decoration: none;\n  list-style: none;\n  &.active {\n    color: green;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    text-decoration: underline;\n  }\n`;\n\nexport const GoBack = styled(Link)`\n  padding: 3px;\n  display: block;\n  width: 100px;\n  text-align: center;\n  svg {\n    width: 20px;\n    height: 15px;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  padding: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/apiTMDB';\nimport { Container, MoviesList } from 'components/Layout/Layout.styled';\n\nconst Home = () => {\n  const [movieTrand, setMovieTrend] = useState([]);\n  useEffect(() => {\n    (async function getMovies() {\n      const res = await getTrendingMovies();\n      const movies = res.data.results;\n      if (movies) {\n        setMovieTrend(movies);\n      }\n    })();\n    return () => {};\n  }, []);\n\n  return (\n    <Container>\n      <h1>Trending today</h1>\n      <MoviesList>\n        {movieTrand.map(({ id, name, title }) => (\n          <li key={id}>\n            <Link to={`movies/${id}`} key={id}>\n              {title} {name}\n            </Link>\n          </li>\n        ))}\n      </MoviesList>\n    </Container>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '0fc2f599494f07c2afe7c8f43e6b230d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  try {\n    const res = await axios(`trending/movie/day?`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getInfoMovies(movieId) {\n  try {\n    const res = await axios(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getSerchMovies(searchQuery) {\n  try {\n    const res = await axios(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: searchQuery,\n        include_adult: false,\n        page: 1,\n      },\n    });\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getCast(movieId) {\n  try {\n    const res = await axios(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return res;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios(`movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response;\n  } catch (error) {\n    console.log('error', error);\n  }\n}\n"],"names":["Container","styled","Header","NavItem","NavLink","Form","Box","MoreInfoList","MoreInfoLink","GoBack","Link","MoviesList","useState","movieTrand","setMovieTrend","useEffect","getTrendingMovies","res","movies","data","results","map","id","name","title","to","API_KEY","axios","params","api_key","console","log","getInfoMovies","movieId","language","getSerchMovies","searchQuery","query","include_adult","page","getCast","getReviews","response"],"sourceRoot":""}